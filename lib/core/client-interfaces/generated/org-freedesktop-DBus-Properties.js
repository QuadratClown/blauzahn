"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.OrgfreedesktopDBusProperties = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2["default"])(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2["default"])(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2["default"])(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

var DBus = require('dbus-next');

var _require = require('events'),
    EventEmitter = _require.EventEmitter;
/*
 * Generated by dbus-next interface generator
 * Template: javascript-class.js.hbs
 */

/**
 * Service: org.bluez
 * ObjectPath: /org/bluez/hci0/*
 * Interface: org.freedesktop.DBus.Properties
 */


var OrgfreedesktopDBusProperties = /*#__PURE__*/function (_EventEmitter) {
  (0, _inherits2["default"])(OrgfreedesktopDBusProperties, _EventEmitter);

  var _super = _createSuper(OrgfreedesktopDBusProperties);

  (0, _createClass2["default"])(OrgfreedesktopDBusProperties, null, [{
    key: "Connect",
    value: function Connect(bus, objectPath, xml) {
      return bus.getProxyObject('org.bluez', objectPath, xml).then(function (obj) {
        return new OrgfreedesktopDBusProperties(obj);
      });
    }
  }]);

  function OrgfreedesktopDBusProperties(dbusObject) {
    var _this;

    (0, _classCallCheck2["default"])(this, OrgfreedesktopDBusProperties);
    _this = _super.call(this);
    _this.dbusInterfaceName = 'org.freedesktop.DBus.Properties';
    _this.dbusObject = dbusObject;
    _this.thisDBusInterface = dbusObject.getInterface('org.freedesktop.DBus.Properties');
    _this.propertiesDBusInterface = dbusObject.getInterface('org.freedesktop.DBus.Properties'); // forward property change events

    var forwardPropertyChange = function forwardPropertyChange(iface, changed, invalidated) {
      if (iface === _this.dbusInterfaceName) {
        _this.emit('PropertiesChanged', iface, changed, invalidated);
      }
    }; // forward all signals


    _this.on("newListener", function (event, listener) {
      if (event === "PropertiesChanged" && _this.listenerCount('PropertiesChanged') === 0) {
        _this.propertiesDBusInterface.on('PropertiesChanged', forwardPropertyChange);
      } else {
        _this.thisDBusInterface.on(event, listener);
      }
    });

    _this.on("removeListener", function (event, listener) {
      if (event === "PropertiesChanged" && _this.listenerCount('PropertiesChanged') === 0) {
        _this.propertiesDBusInterface.removeListener('PropertiesChanged', forwardPropertyChange);
      } else {
        _this.thisDBusInterface.removeListener(event, listener);
      }
    });

    return _this;
  }
  /***** Properties *****/


  (0, _createClass2["default"])(OrgfreedesktopDBusProperties, [{
    key: "getProperties",
    value: function getProperties() {
      return this.propertiesDBusInterface.GetAll(this.dbusInterfaceName);
    }
  }, {
    key: "getProperty",
    value: function getProperty(name) {
      return this.propertiesDBusInterface.Get(this.dbusInterfaceName, name);
    }
  }, {
    key: "setProperty",
    value: function setProperty(name, value) {
      return this.propertiesDBusInterface.Set(this.dbusInterfaceName, name, value);
    }
    /***** Methods *****/
    //@method({ name: 'Get', inSignature: 'ss', outSignature: 'v' })

  }, {
    key: "Get",
    value: function Get(_interface, name) {
      return this.thisDBusInterface.Get(_interface, name);
    } //@method({ name: 'Set', inSignature: 'ssv', outSignature: '' })

  }, {
    key: "Set",
    value: function Set(_interface2, name, value) {
      return this.thisDBusInterface.Set(_interface2, name, value);
    } //@method({ name: 'GetAll', inSignature: 's', outSignature: 'a{sv}' })

  }, {
    key: "GetAll",
    value: function GetAll(_interface3) {
      return this.thisDBusInterface.GetAll(_interface3);
    }
    /***** Signals for org.freedesktop.DBus.Properties *****/
    //@signal({ name: 'PropertiesChanged', signature: 'sa{sv}as' })

  }]);
  return OrgfreedesktopDBusProperties;
}(EventEmitter);

exports.OrgfreedesktopDBusProperties = OrgfreedesktopDBusProperties;